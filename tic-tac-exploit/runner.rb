require_relative './octokitClient'
require_relative './inputValidationError'
require_relative './markdownGenerator'
require 'yaml'
require 'json'

module TicTacExploit
    class Runner
        METADATA_FILE_PATH = 'tic-tac-exploit/metadata.yml'
        README_PATH = 'README.md'

        def initialize(
            github_token:,
            issue_number:,
            issue_title:,
            repository:,
            user:,
            slack_webhook:
          )
          @github_token = github_token
          @repository = repository
          @issue_number = issue_number
          @issue_title = issue_title
          @user = user
          @slack_webhook = slack_webhook
          @playerdata 
        end


        def run
            commanddata = ''
            if @issue_title.start_with?('ttestate:')
                command = 'newstate'
                commanddata << @issue_title
                commanddata['ttestate:']='' 
            end
            @playerdata = commanddata.split('|')
            
            if !isInputOK?
                raise InputValidationError, "INPUT validation failed"
            end

            metadata[:all_players][@user] += 1

            if didUseTooManyPoints?
                comment = "So you figured it out. You can edit the issue title ;-) However this should not be too easy for you. " \
                "You can only use three data points"
                octokit.add_comment(comment: comment)
                octokit.add_reaction(reaction: 'hooray')
                octokit.add_reaction(reaction: 'laugh')
                octokit.add_label(label: 'A for Effort')
                octokit.close_issue 
            elsif didReset?
                octokit.add_comment(comment: "Resetting the game. Good luck!")
                octokit.add_reaction(reaction: 'eyes')
                write_reset
                octokit.close_issue
            elsif didWin?
                comment = "Congratulations! You figured out the weakness in our input validation! Your winning move will be on" \
                " display untill someone else dares to challenge us."
                octokit.add_comment(comment: comment)
                octokit.add_reaction(reaction: 'hooray')
                octokit.add_reaction(reaction: 'laugh')
                octokit.add_reaction(reaction: 'rocket')
                metadata[:elite_hackers][@user] += 1
                write_game(iswinner: true)
                octokit.close_issue
            elsif didAlmostWin?
                comment = "Well, You got three in a row, but we got it twice. Maybe you could also prevent us from getting three in " \
                "a row while getting it yourself"
                octokit.add_comment(comment: comment)
                octokit.add_reaction(reaction: 'hooray')
                octokit.add_reaction(reaction: 'laugh')
                octokit.add_label(label: 'Nice try')
                write_game(iswinner: false)
                octokit.close_issue
            elsif niceTry?
                comment = "Nice, you used three bits, but it just didn't form a row"
                octokit.add_comment(comment: comment)
                octokit.add_reaction(reaction: 'hooray')
                octokit.add_reaction(reaction: 'heart')
                octokit.add_label(label: 'Nice try')
                write_game(iswinner: false)
                octokit.close_issue
            else
                octokit.add_comment(comment: "This time you lose")
                octokit.add_label(label: 'close but no cigar')
                octokit.add_reaction(reaction: 'eyes')
                write_game(iswinner: false)
                octokit.close_issue
            end

        rescue InputValidationError => e
            octokit.add_comment(comment: "Input Validation Failed, did you modify the title, even while we told you not to do it")
            octokit.add_reaction(reaction: 'confused')
            octokit.add_label(label: 'Confused')
            octokit.close_issue
        end

        private
        
        def isInputOK?
            if @playerdata.length() != 9
                return false
            end
  
            for i in @playerdata do
                if i != '1' && i != '0'
                    return false
                end
            end
            return true
        end

        def didUseTooManyPoints?
            points = 0
            for i in @playerdata do
                if i == '1'
                    points +=1
                end
            end
            if points > 3
                return true
            else
                return false
            end
        end

        def didWin?
            #only two solutions. Plaer must draw a cross in order to win (no room for X to win)
            if @playerdata[2] == '1' && @playerdata[4] == '1' && @playerdata[6] == '1'
                return true
            elsif @playerdata[0] == '1' && @playerdata[4] == '1' && @playerdata[8] == '1'
                return true
            end
            return false
        end

        def didAlmostWin?
            #user had three bits in winning position, but we have more than one epic win
            if @playerdata[0] == '1' && @playerdata[1] == '1' && @playerdata[2] == '1'
                return true
            elsif @playerdata[3] == '1' && @playerdata[4] == '1' && @playerdata[5] == '1'
                return true
            elsif @playerdata[6] == '1' && @playerdata[7] == '1' && @playerdata[8] == '1'
                return true
            elsif @playerdata[0] == '1' && @playerdata[3] == '1' && @playerdata[6] == '1'
                return true
            elsif @playerdata[1] == '1' && @playerdata[4] == '1' && @playerdata[7] == '1'
                return true
            elsif @playerdata[2] == '1' && @playerdata[5] == '1' && @playerdata[8] == '1'
                return true
            end
            return false
        end

        def niceTry?
            #User had three bits, but it just does not make any sense
            points = 0
            for i in @playerdata do
                if i == '1'
                    points +=1
                end
            end
            if points == 3
                return true
            end
            return false
        end

        def didReset?
            for i in @playerdata do
                if i == '1'
                    return false
                end
            end
            return true
        end

        def write_game(iswinner: false)
            File.write(README_PATH, markdown.renderReadme(winner: iswinner, game_state: @playerdata, githubuser: @user))
            File.write(METADATA_FILE_PATH, metadata.to_yaml);
            message = ''
            if iswinner
                message = "@#{@user} figured out the weakness in our system"
            else
                message = "@#{@user} tried so hard, but still lost"
            end
            `git add #{README_PATH} #{METADATA_FILE_PATH}`
            `git config --global user.email "github-action-bot@example.com"`
            `git config --global user.name "GitHub Action Bot"`
            if system("git commit -m '#{message}'") && system('git push')
              octokit.add_reaction(reaction: '+1')
            else
              octokit.add_reaction(reaction: 'confused')
              octokit.add_comment(comment: "There was a problem in my commit. Plase try again")
            end
            sendSlackMessage(msg: message)
        end

        def write_reset
            File.write(README_PATH, markdown.renderReset(githubuser: @user))
            File.write(METADATA_FILE_PATH, metadata.to_yaml)
            message = "Reset requested by: @#{@user}"
            `git add #{README_PATH} #{METADATA_FILE_PATH}`
            `git config --global user.email "github-action-bot@example.com"`
            `git config --global user.name "GitHub Action Bot"`
            if system("git commit -m '#{message}'") && system('git push')
              octokit.add_reaction(reaction: '+1')
            else
              octokit.add_reaction(reaction: 'confused')
              octokit.add_comment(comment: "There was a problem in my commit. Plase try again")
            end
        end

        def metadata
            @metadata ||= begin
              metadata = YAML.load_file(METADATA_FILE_PATH)
              if metadata.nil?
                metadata = Hash.new
              end
              if metadata[:all_players].nil?
                metadata[:all_players] = Hash.new
              end
              if metadata[:elite_hackers].nil?
                metadata[:elite_hackers] = Hash.new
              end
              metadata[:all_players].default = 0
              metadata[:elite_hackers].default = 0
              metadata
            end
        end

        def sendSlackMessage(msg:)
            payload = {
                :text     => msg
              }.to_json

              cmd = "curl -X POST --data-urlencode 'payload=#{payload}' #{@webhook_url}"
              system(cmd)
        end

        def octokit
            @octokit ||= OctokitClient.new(github_token: @github_token, repository: @repository, issue_number: @issue_number)
        end

        def markdown
            @markdown ||= MarkdownGenerator.new
        end
    end
end