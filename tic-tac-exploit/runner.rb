require_relative './octokitClient'
require_relative './inputValidationError'
require 'yaml'

module TicTacExploit
    class Runner
        METADATA_FILE_PATH = 'tic-tac-exploit/metadata.yml'
        README_PATH = 'README.md'

        def initialize(
            github_token:,
            issue_number:,
            issue_title:,
            repository:,
            user:
          )
          @github_token = github_token
          @repository = repository
          @issue_number = issue_number
          @issue_title = issue_title
          @user = user
          @playerdata 
        end


        def run
            commanddata = ''
            if @issue_title.start_with?('ttestate:')
                command = 'newstate'
                commanddata << @issue_title
                commanddata['ttestate:']='' 
            end
            @playerdata = commanddata.split('|')

            if !isInputOK?
                raise InputValidationError, "INPUT validation failed"
            end

            if didUseTooManyPoints?
                octokit.add_comment(comment: "So you figured it out. You can edit the issue title ;-) However this should not be too easy for you.
                You can only use three data points")
                octokit.add_reaction(reaction: 'hooray')
                octokit.add_reaction(reaction: 'laugh')
                octokit.add_label(label: 'A for Effort')
                octokit.close_issue 
            elsif didReset?
                octokit.add_comment(comment: "Resetting the game. Good luck!")
                octokit.add_reaction(reation: 'eyes')
                octokit.close_issue()
            elsif didWin?
                octokit.add_comment(comment: "Congratulations! You figured out the weakness in our input validation! Your winning move will be on display untill
                someone else dares to challenge us.")
                octokit.add_reaction(reaction: 'hooray')
                octokit.add_reaction(reaction: 'laugh')
                octokit.add_reaction(reaction: 'rocket')
                octokit.close_issue
            else
                octokit.add_comment(comment: "This time you lose")
                octokit.add_label(label: 'close but no cigar')
                octokit.add_reaction(reaction: 'eyes')
                octokit.close_issue
            end

        rescue InputValidationError => e
            octokit.add_comment(comment: "Input Validation Failed, did you modify the title, even while we told you not to do it")
            octokit.add_reaction(reaction: 'confused')
            octokit.add_label(label: 'Confused')
            octokit.close_issue
        end

        private
        
        def isInputOK?
            if @playerdata.length() != 9
                return false
            end
  
            for i in @playerdata do
                if i != '1' && i != '0'
                    return false
                end
            end
            return true
        end

        def didUseTooManyPoints?
            points = 0
            for i in @playerdata do
                if i == '1'
                    points +=1
                end
            end
            if points > 3
                return true
            else
                return false
            end
        end

        def didWin?
            #only two solutions. Plaer must draw a cross in order to win (no room for X to win)
            if @playerdata[2] == '1' && @playerdata[4] == '1' && @playerdata[6] == '1'
                return true
            elsif @playerdata[0] == '1' && @playerdata[4] == '1' && @playerdata[8] == '1'
                return true
            end
            return false
        end

        def didReset?
            for i in @playerdata do
                if i == '1'
                    return false
                end
            end
            return true
        end

        def write_loser
        end

        def write_winner
        end

        def write_reset
        end
        
        def octokit
            @octokit ||= OctokitClient.new(github_token: @github_token, repository: @repository, issue_number: @issue_number)
        end
    end
end